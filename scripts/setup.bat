@echo off
cd /d "%~dp0.."
title n8n Docker Setup - Initial Configuration
setlocal enabledelayedexpansion

echo ========================================
echo    n8n Docker Setup - Initial Setup
echo ========================================
echo.

REM Check if this is a fresh clone
if exist ".env" (
    echo WARNING: .env file already exists!
    echo This appears to be an already configured installation.
    echo.
    set /p CONTINUE="Do you want to continue with setup anyway? (y/N): "
    if /i not "!CONTINUE!"=="y" (
        echo Setup cancelled.
        pause
        exit /b 0
    )
    echo.
)

echo Checking prerequisites...
echo.

REM Check if Docker Desktop is installed and running
echo [1/6] Checking Docker Desktop...
docker info >nul 2>&1
if errorlevel 1 (
    echo ERROR: Docker Desktop is not running or not installed.
    echo Please install Docker Desktop for Windows and start it.
    echo Download: https://www.docker.com/products/docker-desktop
    echo.
    pause
    exit /b 1
)
echo ✓ Docker Desktop is running

REM Check if Node.js is installed
echo [2/6] Checking Node.js...
node --version >nul 2>&1
if errorlevel 1 (
    echo ERROR: Node.js is not installed.
    echo Please install Node.js from https://nodejs.org/
    echo.
    pause
    exit /b 1
)
echo ✓ Node.js is installed

REM Check if npm is available
npm --version >nul 2>&1
if errorlevel 1 (
    echo ERROR: npm is not available.
    echo Please ensure npm is properly installed with Node.js.
    echo.
    pause
    exit /b 1
)
echo ✓ npm is available

echo.
echo Installing dependencies...
echo.

REM Install Electron wrapper dependencies
echo [3/6] Installing Electron wrapper dependencies...
cd n8n-electron-wrapper
if not exist "node_modules" (
    echo Installing npm dependencies...
    npm install
    if errorlevel 1 (
        echo ERROR: Failed to install npm dependencies.
        echo.
        pause
        exit /b 1
    )
    echo ✓ npm dependencies installed
) else (
    echo ✓ node_modules already exists
)
cd ..

REM Create .env file if it doesn't exist
echo [4/6] Setting up environment configuration...
if not exist ".env" (
    if exist ".env.example" (
        echo Copying .env.example to .env...
        copy ".env.example" ".env" >nul
        echo ✓ .env file created from template
    ) else (
        echo Creating basic .env file...
        (
            echo # n8n Environment Configuration
            echo # Generated by setup script
            echo.
            echo # Basic Authentication
            echo N8N_BASIC_AUTH_USER=admin
            echo N8N_BASIC_AUTH_PASSWORD=password
            echo.
            echo # Server Configuration
            echo N8N_HOST=localhost
            echo N8N_PORT=5678
            echo.
            echo # Optional: Lock n8n version
            echo # N8N_VERSION=
            echo.
            echo # Timezone
            echo TZ=UTC
        ) > .env
        echo ✓ Basic .env file created
        echo.
        echo IMPORTANT: Please edit .env file to set secure credentials!
        echo Default credentials are admin/password - change these immediately.
    )
) else (
    echo ✓ .env file already exists
)

REM Create desktop shortcuts
echo [5/6] Creating desktop shortcuts...
echo.

REM Get desktop path
for /f "tokens=2*" %%a in ('reg query "HKEY_CURRENT_USER\Software\Microsoft\Windows\CurrentVersion\Explorer\User Shell Folders" /v Desktop 2^>nul') do set "DESKTOP=%%b"
if "!DESKTOP!"=="" set "DESKTOP=%USERPROFILE%\Desktop"

REM Create shortcuts directory if it doesn't exist
if not exist "shortcuts" mkdir shortcuts

REM Create silent startup shortcut
echo Creating "n8n up (silent)" shortcut...
powershell -Command "$WshShell = New-Object -comObject WScript.Shell; $Shortcut = $WshShell.CreateShortcut('shortcuts\n8n up (silent).lnk'); $Shortcut.TargetPath = '%~dp0run_silent.bat'; $Shortcut.WorkingDirectory = '%~dp0..'; $Shortcut.IconLocation = '%~dp0..\icons\n8n.ico'; $Shortcut.Description = 'Start n8n silently'; $Shortcut.Save()"

REM Create verbose startup shortcut
echo Creating "n8n up (verbose)" shortcut...
powershell -Command "$WshShell = New-Object -comObject WScript.Shell; $Shortcut = $WshShell.CreateShortcut('shortcuts\n8n up (verbose).lnk'); $Shortcut.TargetPath = '%~dp0run_verbose.bat'; $Shortcut.WorkingDirectory = '%~dp0..'; $Shortcut.IconLocation = '%~dp0..\icons\n8n.ico'; $Shortcut.Description = 'Start n8n with logs'; $Shortcut.Save()"

REM Create shutdown shortcut
echo Creating "n8n down" shortcut...
powershell -Command "$WshShell = New-Object -comObject WScript.Shell; $Shortcut = $WshShell.CreateShortcut('shortcuts\n8n down.lnk'); $Shortcut.TargetPath = '%~dp0down.bat'; $Shortcut.WorkingDirectory = '%~dp0..'; $Shortcut.IconLocation = '%~dp0..\icons\n8n.ico'; $Shortcut.Description = 'Stop n8n'; $Shortcut.Save()"

echo ✓ Desktop shortcuts created in shortcuts/ folder

REM Pull latest n8n Docker image
echo [6/6] Pulling latest n8n Docker image...
echo.
echo This may take a few minutes depending on your internet connection...
docker pull n8nio/n8n:latest
if errorlevel 1 (
    echo WARNING: Failed to pull latest n8n image.
    echo You can try again later or use the image that's already available.
) else (
    echo ✓ Latest n8n Docker image pulled
)

echo.
echo ========================================
echo           Setup Complete!
echo ========================================
echo.
echo What's been configured:
echo ✓ Docker Desktop verified
echo ✓ Node.js and npm verified  
echo ✓ Electron wrapper dependencies installed
echo ✓ Environment configuration created
echo ✓ Desktop shortcuts created
echo ✓ Latest n8n Docker image pulled
echo.
echo Next steps:
echo 1. Edit .env file to set secure credentials
echo 2. Copy shortcuts from shortcuts/ to your desktop
echo 3. Run "scripts\run_silent.bat" or use desktop shortcuts
echo.
echo For help, see README.md
echo.
pause 